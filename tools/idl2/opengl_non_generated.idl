/* Copyright (C) 2009 Mobile Sorcery AB

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License, version 2, as published by
the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with this program; see the file COPYING.  If not, write to the Free
Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.
*/

/* 
 * Returns TRUE on success and FALSE on failure.
 */
int maGLInit();

/* 
 * Returns TRUE on success and FALSE on failure.
 */
int maGLClose();

/* 
 * Returns TRUE on success and FALSE on failure.
 */
int maGLWaitNative();

/* 
 * Returns TRUE on success and FALSE on failure.
 */
int maGLWaitGL();

/*
 * Creates a direct buffer in placeholder 'placeholder' 
 * of data at 'src' of size 'size' in bytes.
 * Source data pointer and size must be aligned on a 4-byte boundary
 * Returns TRUE on success and FALSE on failure.
 */
int maGLCreateBuffer(in MAHandle placeholder, in MAAddress src, in int size);
struct MAGLWriteBufferParams {  
	MAHandle placeholder;  
	MAAddress src;  
	int offset;  
	int size;
}
int maGLWriteBuffer(in MAGLWriteBufferParams params);

struct MAGLReadBufferParams {  
	MAHandle placeholder;  
	MAAddress dst;  
	int offset;  
	int size;
}
int maGLReadBuffer(in MAGLReadBufferParams params);
