using System;
namespace MoSync {
public class Constants {
	public const uint MoSyncHash = 0xd65163df;
	public const int TRANS_NONE = 0;
	public const int TRANS_ROT90 = 5;
	public const int TRANS_ROT180 = 3;
	public const int TRANS_ROT270 = 6;
	public const int TRANS_MIRROR = 2;
	public const int TRANS_MIRROR_ROT90 = 7;
	public const int TRANS_MIRROR_ROT180 = 1;
	public const int TRANS_MIRROR_ROT270 = 4;
	public const int HANDLE_SCREEN = 0;
	public const int HANDLE_LOCAL = 0;
	public const int RES_OUT_OF_MEMORY = -1;
	public const int RES_BAD_INPUT = -2;
	public const int RES_OK = 1;
	public const int MAS_CREATE_IF_NECESSARY = 1;
	public const int STERR_GENERIC = -2;
	public const int STERR_FULL = -3;
	public const int STERR_NONEXISTENT = -5;
	public const int CONNERR_GENERIC = -2;
	public const int CONNERR_MAX = -3;
	public const int CONNERR_DNS = -4;
	public const int CONNERR_INTERNAL = -5;
	public const int CONNERR_CLOSED = -6;
	public const int CONNERR_READONLY = -7;
	public const int CONNERR_FORBIDDEN = -8;
	public const int CONNERR_UNINITIALIZED = -9;
	public const int CONNERR_CONLEN = -10;
	public const int CONNERR_URL = -11;
	public const int CONNERR_UNAVAILABLE = -12;
	public const int CONNERR_CANCELED = -13;
	public const int CONNERR_PROTOCOL = -14;
	public const int CONNERR_NETWORK = -15;
	public const int CONNERR_NOHEADER = -16;
	public const int CONNERR_NOTFOUND = -17;
	public const int CONNERR_SSL = -18;
	public const int CONNERR_USER = -1000000;
	public const int CONNOP_READ = 1;
	public const int CONNOP_WRITE = 2;
	public const int CONNOP_CONNECT = 7;
	public const int CONNOP_FINISH = 11;
	public const int CONNOP_ACCEPT = 16;
	public const int CONN_MAX = 32;
	public const int BTADDR_LEN = 6;
	public const int CONN_FAMILY_INET4 = 1;
	public const int CONN_FAMILY_BT = 2;
	public const int HTTP_GET = 1;
	public const int HTTP_POST = 2;
	public const int HTTP_HEAD = 3;
	public const int HTTP_PUT = 4;
	public const int HTTP_DELETE = 5;
	public const int MAK_UNKNOWN = 0;
	public const int MAK_FIRST = 0;
	public const int MAK_BACKSPACE = 8;
	public const int MAK_TAB = 9;
	public const int MAK_CLEAR = 12;
	public const int MAK_RETURN = 13;
	public const int MAK_PAUSE = 19;
	public const int MAK_ESCAPE = 27;
	public const int MAK_SPACE = 32;
	public const int MAK_EXCLAIM = 33;
	public const int MAK_QUOTEDBL = 34;
	public const int MAK_POUND = 35;
	public const int MAK_HASH = 35;
	public const int MAK_GRID = 35;
	public const int MAK_DOLLAR = 36;
	public const int MAK_AMPERSAND = 38;
	public const int MAK_QUOTE = 39;
	public const int MAK_LEFTPAREN = 40;
	public const int MAK_RIGHTPAREN = 41;
	public const int MAK_ASTERISK = 42;
	public const int MAK_STAR = 42;
	public const int MAK_PLUS = 43;
	public const int MAK_COMMA = 44;
	public const int MAK_MINUS = 45;
	public const int MAK_PERIOD = 46;
	public const int MAK_SLASH = 47;
	public const int MAK_0 = 48;
	public const int MAK_1 = 49;
	public const int MAK_2 = 50;
	public const int MAK_3 = 51;
	public const int MAK_4 = 52;
	public const int MAK_5 = 53;
	public const int MAK_6 = 54;
	public const int MAK_7 = 55;
	public const int MAK_8 = 56;
	public const int MAK_9 = 57;
	public const int MAK_COLON = 58;
	public const int MAK_SEMICOLON = 59;
	public const int MAK_LESS = 60;
	public const int MAK_EQUALS = 61;
	public const int MAK_GREATER = 62;
	public const int MAK_QUESTION = 63;
	public const int MAK_AT = 64;
	public const int MAK_LEFTBRACKET = 91;
	public const int MAK_BACKSLASH = 92;
	public const int MAK_RIGHTBRACKET = 93;
	public const int MAK_CARET = 94;
	public const int MAK_UNDERSCORE = 95;
	public const int MAK_BACKQUOTE = 96;
	public const int MAK_A = 97;
	public const int MAK_B = 98;
	public const int MAK_C = 99;
	public const int MAK_D = 100;
	public const int MAK_E = 101;
	public const int MAK_F = 102;
	public const int MAK_G = 103;
	public const int MAK_H = 104;
	public const int MAK_I = 105;
	public const int MAK_J = 106;
	public const int MAK_K = 107;
	public const int MAK_L = 108;
	public const int MAK_M = 109;
	public const int MAK_N = 110;
	public const int MAK_O = 111;
	public const int MAK_P = 112;
	public const int MAK_Q = 113;
	public const int MAK_R = 114;
	public const int MAK_S = 115;
	public const int MAK_T = 116;
	public const int MAK_U = 117;
	public const int MAK_V = 118;
	public const int MAK_W = 119;
	public const int MAK_X = 120;
	public const int MAK_Y = 121;
	public const int MAK_Z = 122;
	public const int MAK_DELETE = 127;
	public const int MAK_KP0 = 256;
	public const int MAK_KP1 = 257;
	public const int MAK_KP2 = 258;
	public const int MAK_KP3 = 259;
	public const int MAK_KP4 = 260;
	public const int MAK_KP5 = 261;
	public const int MAK_KP6 = 262;
	public const int MAK_KP7 = 263;
	public const int MAK_KP8 = 264;
	public const int MAK_KP9 = 265;
	public const int MAK_KP_PERIOD = 266;
	public const int MAK_KP_DIVIDE = 267;
	public const int MAK_KP_MULTIPLY = 268;
	public const int MAK_KP_MINUS = 269;
	public const int MAK_KP_PLUS = 270;
	public const int MAK_KP_ENTER = 271;
	public const int MAK_KP_EQUALS = 272;
	public const int MAK_UP = 273;
	public const int MAK_DOWN = 274;
	public const int MAK_RIGHT = 275;
	public const int MAK_LEFT = 276;
	public const int MAK_INSERT = 277;
	public const int MAK_HOME = 278;
	public const int MAK_END = 279;
	public const int MAK_PAGEUP = 280;
	public const int MAK_PAGEDOWN = 281;
	public const int MAK_FIRE = 284;
	public const int MAK_SOFTLEFT = 285;
	public const int MAK_SOFTRIGHT = 286;
	public const int MAK_PEN = 291;
	public const int MAK_BACK = 292;
	public const int MAK_MENU = 293;
	public const int MAK_RSHIFT = 303;
	public const int MAK_LSHIFT = 304;
	public const int MAK_RCTRL = 305;
	public const int MAK_LCTRL = 306;
	public const int MAK_RALT = 307;
	public const int MAK_LALT = 308;
	public const int MAK_SEARCH = 309;
	public const int MAKB_LEFT = 0x00001;
	public const int MAKB_UP = 0x00002;
	public const int MAKB_RIGHT = 0x00004;
	public const int MAKB_DOWN = 0x00008;
	public const int MAKB_FIRE = 0x00010;
	public const int MAKB_SOFTLEFT = 0x00020;
	public const int MAKB_SOFTRIGHT = 0x00040;
	public const int MAKB_0 = 0x00080;
	public const int MAKB_1 = 0x00100;
	public const int MAKB_2 = 0x00200;
	public const int MAKB_3 = 0x00400;
	public const int MAKB_4 = 0x00800;
	public const int MAKB_5 = 0x01000;
	public const int MAKB_6 = 0x02000;
	public const int MAKB_7 = 0x04000;
	public const int MAKB_8 = 0x08000;
	public const int MAKB_9 = 0x10000;
	public const int MAKB_ASTERISK = 0x20000;
	public const int MAKB_STAR = 0x20000;
	public const int MAKB_HASH = 0x40000;
	public const int MAKB_POUND = 0x40000;
	public const int MAKB_GRID = 0x40000;
	public const int MAKB_CLEAR = 0x80000;
	public const int EVENT_BUFFER_SIZE = 256;
	public const int EVENT_CLOSE_TIMEOUT = 2000;
	public const int EVENT_TYPE_CLOSE = 1;
	public const int EVENT_TYPE_KEY_PRESSED = 2;
	public const int EVENT_TYPE_KEY_RELEASED = 3;
	public const int EVENT_TYPE_CONN = 4;
	public const int EVENT_TYPE_BT = 5;
	public const int EVENT_TYPE_TTS = 6;
	public const int EVENT_TYPE_WLAN = 7;
	public const int EVENT_TYPE_POINTER_PRESSED = 8;
	public const int EVENT_TYPE_POINTER_RELEASED = 9;
	public const int EVENT_TYPE_POINTER_DRAGGED = 10;
	public const int EVENT_TYPE_CALL = 11;
	public const int EVENT_TYPE_FOCUS_LOST = 13;
	public const int EVENT_TYPE_FOCUS_GAINED = 14;
	public const int EVENT_TYPE_STREAM = 15;
	public const int EVENT_TYPE_LOCATION = 16;
	public const int EVENT_TYPE_LOCATION_PROVIDER = 17;
	public const int EVENT_TYPE_AUDIOBUFFER_FILL = 18;
	public const int EVENT_TYPE_SCREEN_CHANGED = 21;
	public const int EVENT_TYPE_CHAR = 22;
	public const int EVENT_TYPE_TEXTBOX = 23;
	public const int EVENT_TYPE_HOMESCREEN_SHOWN = 24;
	public const int EVENT_TYPE_HOMESCREEN_HIDDEN = 25;
	public const int EVENT_TYPE_SCREEN_STATE_ON = 26;
	public const int EVENT_TYPE_SCREEN_STATE_OFF = 27;
	public const int EVENT_TYPE_WIDGET = 28;
	public const int EVENT_TYPE_BLUETOOTH_TURNED_OFF = 29;
	public const int EVENT_TYPE_BLUETOOTH_TURNED_ON = 30;
	public const int EVENT_TYPE_IMAGE_PICKER = 31;
	public const int EVENT_TYPE_SMS = 32;
	public const int EVENT_TYPE_SENSOR = 33;
	public const int RUNTIME_MORE = 1;
	public const int RUNTIME_JAVA = 2;
	public const int RUNTIME_SYMBIAN = 3;
	public const int RUNTIME_WINCE = 4;
	public const int REPORT_PANIC = 1;
	public const int REPORT_EXCEPTION = 2;
	public const int REPORT_PLATFORM_CODE = 3;
	public const int REPORT_USER_PANIC = 4;
	public const int REPORT_TIMEOUT = 5;
	public const int RT_PLACEHOLDER = 1;
	public const int RT_IMAGE = 2;
	public const int RT_SPRITE = 3;
	public const int RT_BINARY = 4;
	public const int RT_UBIN = 5;
	public const int RT_SKIP = 6;
	public const int RT_LABEL = 9;
	public const int RT_FLUX = 127;
	public const int FONT_TYPE_SERIF = 0;
	public const int FONT_TYPE_SANS_SERIF = 1;
	public const int FONT_TYPE_MONOSPACE = 2;
	public const int FONT_STYLE_NORMAL = 0;
	public const int FONT_STYLE_BOLD = 1;
	public const int FONT_STYLE_ITALIC = 2;
	public const int RES_FONT_OK = 1;
	public const int RES_FONT_INVALID_HANDLE = -1;
	public const int RES_FONT_INDEX_OUT_OF_BOUNDS = -2;
	public const int RES_FONT_NO_TYPE_STYLE_COMBINATION = -3;
	public const int RES_FONT_NAME_NONEXISTENT = -4;
	public const int RES_FONT_LIST_NOT_INITIALIZED = -5;
	public const int RES_FONT_INSUFFICIENT_BUFFER = -6;
	public const int RES_FONT_INVALID_SIZE = -7;
	public const int RES_FONT_DELETE_DENIED = -8;
	public const int WLAN_ADDR_LEN = 6;
	public const int MA_LOC_NONE = 1;
	public const int MA_LOC_INVALID = 2;
	public const int MA_LOC_UNQUALIFIED = 3;
	public const int MA_LOC_QUALIFIED = 4;
	public const int MA_LPS_AVAILABLE = 1;
	public const int MA_LPS_TEMPORARILY_UNAVAILABLE = 2;
	public const int MA_LPS_OUT_OF_SERVICE = 3;
	public const int MA_ACCESS_READ = 1;
	public const int MA_ACCESS_READ_WRITE = 3;
	public const int MA_SEEK_SET = 0;
	public const int MA_SEEK_CUR = 1;
	public const int MA_SEEK_END = 2;
	public const int MA_FERR_GENERIC = -2;
	public const int MA_FERR_NOTFOUND = -3;
	public const int MA_FERR_FORBIDDEN = -4;
	public const int MA_FERR_RENAME_FILESYSTEM = -5;
	public const int MA_FERR_RENAME_DIRECTORY = -6;
	public const int MA_FERR_WRONG_TYPE = -7;
	public const int MA_SMS_RESULT_SENT = 1;
	public const int MA_SMS_RESULT_NOT_SENT = 2;
	public const int MA_SMS_RESULT_DELIVERED = 3;
	public const int MA_SMS_RESULT_NOT_DELIVERED = 4;
	public const int CALLSTATE_UNKNOWN = 0;
	public const int CALLSTATE_IDLE = 1;
	public const int CALLSTATE_DIALLING = 2;
	public const int CALLSTATE_RINGING = 3;
	public const int CALLSTATE_ANSWERING = 4;
	public const int CALLSTATE_CONNECTING = 5;
	public const int CALLSTATE_CONNECTED = 6;
	public const int CALLSTATE_RECONNECTPENDING = 7;
	public const int CALLSTATE_DISCONNECTING = 8;
	public const int CALLSTATE_HOLD = 9;
	public const int CALLSTATE_TRANSFERRING = 10;
	public const int CALLSTATE_TRANSFERALERTING = 11;
	public const int STREAMEVENT_OPEN_COMPLETE = 1;
	public const int STREAMEVENT_PREPARE_COMPLETE = 2;
	public const int STREAMEVENT_PLAY_COMPLETE = 3;
	public const int STREAMEVENT_LOADING_STARTED = 4;
	public const int STREAMEVENT_LOADING_COMPLETE = 5;
	public const int STREAMEVENT_UNKNOWN_EVENT = 6;
	public const int AUDIO_FMT_S8 = 1;
	public const int AUDIO_FMT_S16 = 2;
	public const int AUDIO_FMT_U8 = 3;
	public const int AUDIO_FMT_U16 = 4;
	public const int MA_PIM_CONTACTS = 1;
	public const int MA_PIM_EVENTS = 2;
	public const int MA_PIM_TODOS = 3;
	public const int MA_PIM_TYPE_BINARY = 0;
	public const int MA_PIM_TYPE_BOOLEAN = 1;
	public const int MA_PIM_TYPE_DATE = 2;
	public const int MA_PIM_TYPE_INT = 3;
	public const int MA_PIM_TYPE_STRING = 4;
	public const int MA_PIM_TYPE_STRING_ARRAY = 5;
	public const int MA_PIM_FIELD_CONTACT_ADDR = 100;
	public const int MA_PIM_FIELD_CONTACT_BIRTHDAY = 101;
	public const int MA_PIM_FIELD_CONTACT_CLASS = 102;
	public const int MA_PIM_FIELD_CONTACT_EMAIL = 103;
	public const int MA_PIM_FIELD_CONTACT_FORMATTED_ADDR = 104;
	public const int MA_PIM_FIELD_CONTACT_FORMATTED_NAME = 105;
	public const int MA_PIM_FIELD_CONTACT_NAME = 106;
	public const int MA_PIM_FIELD_CONTACT_NICKNAME = 107;
	public const int MA_PIM_FIELD_CONTACT_NOTE = 108;
	public const int MA_PIM_FIELD_CONTACT_ORG = 109;
	public const int MA_PIM_FIELD_CONTACT_PHOTO = 110;
	public const int MA_PIM_FIELD_CONTACT_PHOTO_URL = 111;
	public const int MA_PIM_FIELD_CONTACT_PUBLIC_KEY = 112;
	public const int MA_PIM_FIELD_CONTACT_PUBLIC_KEY_STRING = 113;
	public const int MA_PIM_FIELD_CONTACT_REVISION = 114;
	public const int MA_PIM_FIELD_CONTACT_TEL = 115;
	public const int MA_PIM_FIELD_CONTACT_TITLE = 116;
	public const int MA_PIM_FIELD_CONTACT_UID = 117;
	public const int MA_PIM_FIELD_CONTACT_URL = 118;
	public const int MA_PIM_FIELD_CONTACT_IM = 119;
	public const int MA_PIM_FIELD_CONTACT_RELATION = 120;
	public const int MA_PIM_FIELD_CONTACT_ORG_INFO = 121;
	public const int MA_PIM_CONTACT_ADDR_POBOX = 0;
	public const int MA_PIM_CONTACT_ADDR_EXTRA = 1;
	public const int MA_PIM_CONTACT_ADDR_STREET = 2;
	public const int MA_PIM_CONTACT_ADDR_LOCALITY = 3;
	public const int MA_PIM_CONTACT_ADDR_REGION = 4;
	public const int MA_PIM_CONTACT_ADDR_POSTALCODE = 5;
	public const int MA_PIM_CONTACT_ADDR_COUNTRY = 6;
	public const int MA_PIM_CONTACT_ADDR_NEIGHBORHOOD = 7;
	public const int MA_PIM_CONTACT_NAME_FAMILY = 0;
	public const int MA_PIM_CONTACT_NAME_GIVEN = 1;
	public const int MA_PIM_CONTACT_NAME_OTHER = 2;
	public const int MA_PIM_CONTACT_NAME_PREFIX = 3;
	public const int MA_PIM_CONTACT_NAME_SUFFIX = 4;
	public const int MA_PIM_CONTACT_NAME_PHONETIC_FAMILY = 5;
	public const int MA_PIM_CONTACT_NAME_PHONETIC_GIVEN = 6;
	public const int MA_PIM_CONTACT_NAME_PHONETIC_OTHER = 7;
	public const int MA_PIM_CONTACT_ORG_INFO_DEPARTMENT = 0;
	public const int MA_PIM_CONTACT_ORG_INFO_JOB_DESCRIPTION = 1;
	public const int MA_PIM_CONTACT_ORG_INFO_SYMBOL = 2;
	public const int MA_PIM_CONTACT_ORG_INFO_PHONETIC_NAME = 3;
	public const int MA_PIM_CONTACT_ORG_INFO_OFFICE_LOCATION = 4;
	public const int MA_PIM_CONTACT_ORG_INFO_PHONETIC_NAME_STYLE = 5;
	public const int MA_PIM_CONTACT_IM_USERNAME = 0;
	public const int MA_PIM_CONTACT_IM_PROTOCOL = 1;
	public const int MA_PIM_CONTACT_CLASS_CONFIDENTIAL = 200;
	public const int MA_PIM_CONTACT_CLASS_PRIVATE = 201;
	public const int MA_PIM_CONTACT_CLASS_PUBLIC = 202;
	public const String MA_PIM_CONTACT_IM_PROTOCOL_AIM = "AIM";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_MSN = "MSN";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_YAHOO = "Yahoo";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_SKYPE = "Skype";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_QQ = "QQ";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_GOOGLE_TALK = "GoogleTalk";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_ICQ = "ICQ";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_JABBER = "Jabber";
	public const String MA_PIM_CONTACT_IM_PROTOCOL_NETMEETING = "Netmeeting";
	public const int MA_PIM_ATTR_ASST = 1;
	public const int MA_PIM_ATTR_AUTO = 2;
	public const int MA_PIM_ATTR_FAX = 4;
	public const int MA_PIM_ATTR_HOME = 8;
	public const int MA_PIM_ATTR_MOBILE = 16;
	public const int MA_PIM_ATTR_OTHER = 32;
	public const int MA_PIM_ATTR_PAGER = 64;
	public const int MA_PIM_ATTR_PREFERRED = 128;
	public const int MA_PIM_ATTR_SMS = 256;
	public const int MA_PIM_ATTR_WORK = 512;
	public const int MA_PIM_ATTR_ADDR_HOME = 101;
	public const int MA_PIM_ATTR_ADDR_WORK = 102;
	public const int MA_PIM_ATTR_ADDR_OTHER = 103;
	public const int MA_PIM_ATTR_ADDR_CUSTOM = 104;
	public const int MA_PIM_ATTR_EMAIL_HOME = 201;
	public const int MA_PIM_ATTR_EMAIL_WORK = 202;
	public const int MA_PIM_ATTR_EMAIL_MOBILE = 203;
	public const int MA_PIM_ATTR_EMAIL_OTHER = 204;
	public const int MA_PIM_ATTR_EMAIL_CUSTOM = 205;
	public const int MA_PIM_ATTR_FORMATTED_ADDR_HOME = 301;
	public const int MA_PIM_ATTR_FORMATTED_ADDR_WORK = 302;
	public const int MA_PIM_ATTR_FORMATTED_ADDR_OTHER = 303;
	public const int MA_PIM_ATTR_FORMATTED_ADDR_CUSTOM = 304;
	public const int MA_PIM_ATTR_ORG_WORK = 401;
	public const int MA_PIM_ATTR_ORG_OTHER = 402;
	public const int MA_PIM_ATTR_ORG_CUSTOM = 403;
	public const int MA_PIM_ATTR_PHONE_HOME = 501;
	public const int MA_PIM_ATTR_PHONE_MOBILE = 502;
	public const int MA_PIM_ATTR_PHONE_HOME_FAX = 503;
	public const int MA_PIM_ATTR_PHONE_WORK_FAX = 504;
	public const int MA_PIM_ATTR_PHONE_PAGER = 505;
	public const int MA_PIM_ATTR_PHONE_IPHONE = 506;
	public const int MA_PIM_ATTR_PHONE_WORK = 507;
	public const int MA_PIM_ATTR_PHONE_CALLBACK = 508;
	public const int MA_PIM_ATTR_PHONE_CAR = 509;
	public const int MA_PIM_ATTR_PHONE_COMPANY_MAIN = 510;
	public const int MA_PIM_ATTR_PHONE_ISDN = 511;
	public const int MA_PIM_ATTR_PHONE_OTHER_FAX = 512;
	public const int MA_PIM_ATTR_PHONE_RADIO = 513;
	public const int MA_PIM_ATTR_PHONE_TELEX = 514;
	public const int MA_PIM_ATTR_PHONE_TTY_TDD = 515;
	public const int MA_PIM_ATTR_PHONE_WORK_MOBILE = 516;
	public const int MA_PIM_ATTR_PHONE_WORK_PAGER = 517;
	public const int MA_PIM_ATTR_PHONE_ASSISTANT = 518;
	public const int MA_PIM_ATTR_PHONE_MMS = 519;
	public const int MA_PIM_ATTR_PHONE_OTHER = 520;
	public const int MA_PIM_ATTR_PHONE_CUSTOM = 521;
	public const int MA_PIM_ATTR_TITLE_WORK = 601;
	public const int MA_PIM_ATTR_TITLE_OTHER = 602;
	public const int MA_PIM_ATTR_TITLE_CUSTOM = 603;
	public const int MA_PIM_ATTR_WEBSITE_HOMEPAGE = 701;
	public const int MA_PIM_ATTR_WEBSITE_BLOG = 702;
	public const int MA_PIM_ATTR_WEBSITE_PROFILE = 703;
	public const int MA_PIM_ATTR_WEBSITE_HOME = 704;
	public const int MA_PIM_ATTR_WEBSITE_WORK = 705;
	public const int MA_PIM_ATTR_WEBSITE_FTP = 706;
	public const int MA_PIM_ATTR_WEBSITE_OTHER = 707;
	public const int MA_PIM_ATTR_WEBSITE_CUSTOM = 708;
	public const int MA_PIM_ATTR_IM_HOME = 801;
	public const int MA_PIM_ATTR_IM_WORK = 802;
	public const int MA_PIM_ATTR_IM_OTHER = 803;
	public const int MA_PIM_ATTR_IM_CUSTOM = 804;
	public const int MA_PIM_ATTR_RELATION_MOTHER = 901;
	public const int MA_PIM_ATTR_RELATION_FATHER = 902;
	public const int MA_PIM_ATTR_RELATION_PARENT = 903;
	public const int MA_PIM_ATTR_RELATION_SISTER = 904;
	public const int MA_PIM_ATTR_RELATION_BROTHER = 905;
	public const int MA_PIM_ATTR_RELATION_CHILD = 906;
	public const int MA_PIM_ATTR_RELATION_FRIEND = 907;
	public const int MA_PIM_ATTR_RELATION_SPOUSE = 908;
	public const int MA_PIM_ATTR_RELATION_PARTNER = 909;
	public const int MA_PIM_ATTR_RELATION_MANAGER = 910;
	public const int MA_PIM_ATTR_RELATION_ASSISTANT = 911;
	public const int MA_PIM_ATTR_RELATION_DOMESTIC_PARTNER = 912;
	public const int MA_PIM_ATTR_RELATION_REFERRED_BY = 913;
	public const int MA_PIM_ATTR_RELATION_RELATIVE = 914;
	public const int MA_PIM_ATTR_RELATION_CUSTOM = 915;
	public const int MA_PIM_ATTR_ORG_INFO_WORK = 1001;
	public const int MA_PIM_ATTR_ORG_INFO_OTHER = 1002;
	public const int MA_PIM_ATTR_ORG_INFO_CUSTOM = 1003;
	public const int MA_PIM_ATTRPREFERRED = 0x10000;
	public const int MA_PIM_ERR_NONE = 0;
	public const int MA_PIM_ERR_UNAVAILABLE = -1;
	public const int MA_PIM_ERR_NATIVE_TYPE_MISMATCH = -2;
	public const int MA_PIM_ERR_LIST_TYPE_INVALID = -3;
	public const int MA_PIM_ERR_LIST_UNAVAILABLE = -4;
	public const int MA_PIM_ERR_LIST_ALREADY_OPENED = -5;
	public const int MA_PIM_ERR_FIELD_INVALID = -6;
	public const int MA_PIM_ERR_FIELD_UNSUPPORTED = -7;
	public const int MA_PIM_ERR_FIELD_EMPTY = -8;
	public const int MA_PIM_ERR_FIELD_COUNT_MAX = -9;
	public const int MA_PIM_ERR_FIELD_READ_ONLY = -10;
	public const int MA_PIM_ERR_FIELD_WRITE_ONLY = -11;
	public const int MA_PIM_ERR_INDEX_INVALID = -12;
	public const int MA_PIM_ERR_HANDLE_INVALID = -13;
	public const int MA_PIM_ERR_ATTRIBUTE_COMBO_UNSUPPORTED = -14;
	public const int MA_PIM_ERR_ATTRIBUTE_CUSTOM = -15;
	public const int MA_PIM_ERR_NO_ATTRIBUTES = -16;
	public const int MA_PIM_ERR_BUFFER_TOO_SMALL = -17;
	public const int MA_PIM_ERR_BUFFER_INVALID = -18;
	public const int MA_PIM_ERR_NO_LABEL = -19;
	public const int MA_PIM_ERR_OPERATION_NOT_PERMITTED = -20;
	public const int MAW_EVENT_POINTER_PRESSED = 2;
	public const int MAW_EVENT_POINTER_RELEASED = 3;
	public const int MAW_EVENT_CONTENT_LOADED = 4;
	public const int MAW_EVENT_CLICKED = 5;
	public const int MAW_EVENT_ITEM_CLICKED = 6;
	public const int MAW_EVENT_TAB_CHANGED = 7;
	public const int MAW_EVENT_GL_VIEW_READY = 8;
	public const int MAW_EVENT_WEB_VIEW_URL_CHANGED = 9;
	public const int MAW_EVENT_STACK_SCREEN_POPPED = 10;
	public const int MAW_EVENT_SLIDER_VALUE_CHANGED = 11;
	public const int MAW_EVENT_DATE_PICKER_VALUE_CHANGED = 12;
	public const int MAW_EVENT_TIME_PICKER_VALUE_CHANGED = 13;
	public const int MAW_EVENT_NUMBER_PICKER_VALUE_CHANGED = 14;
	public const int MAW_EVENT_VIDEO_STATE_CHANGED = 15;
	public const int MAW_EVENT_EDIT_BOX_EDITING_DID_BEGIN = 16;
	public const int MAW_EVENT_EDIT_BOX_EDITING_DID_END = 17;
	public const int MAW_EVENT_EDIT_BOX_TEXT_CHANGED = 18;
	public const int MAW_EVENT_EDIT_BOX_RETURN = 19;
	public const int MAW_EVENT_WEB_VIEW_CONTENT_LOADING = 20;
	public const int MAW_EVENT_WEB_VIEW_HOOK_INVOKED = 21;
	public const int MAW_CONSTANT_MOSYNC_SCREEN_HANDLE = 0;
	public const int MAW_CONSTANT_FILL_AVAILABLE_SPACE = -1;
	public const int MAW_CONSTANT_WRAP_CONTENT = -2;
	public const int MAW_CONSTANT_STARTED = 1;
	public const int MAW_CONSTANT_DONE = 2;
	public const int MAW_CONSTANT_STOPPED = 3;
	public const int MAW_CONSTANT_ERROR = -1;
	public const int MAW_CONSTANT_SOFT = 5;
	public const int MAW_CONSTANT_HARD = 6;
	public const String MAW_ALIGNMENT_LEFT = "left";
	public const String MAW_ALIGNMENT_RIGHT = "right";
	public const String MAW_ALIGNMENT_CENTER = "center";
	public const String MAW_ALIGNMENT_TOP = "top";
	public const String MAW_ALIGNMENT_BOTTOM = "bottom";
	public const int MAW_VIDEO_VIEW_ACTION_PLAY = 1;
	public const int MAW_VIDEO_VIEW_ACTION_PAUSE = 2;
	public const int MAW_VIDEO_VIEW_ACTION_STOP = 3;
	public const int MAW_VIDEO_VIEW_STATE_PLAYING = 1;
	public const int MAW_VIDEO_VIEW_STATE_PAUSED = 2;
	public const int MAW_VIDEO_VIEW_STATE_STOPPED = 3;
	public const int MAW_VIDEO_VIEW_STATE_FINISHED = 4;
	public const int MAW_VIDEO_VIEW_STATE_SOURCE_READY = 5;
	public const int MAW_VIDEO_VIEW_STATE_INTERRUPTED = 6;
	public const int MAW_RES_OK = 0;
	public const int MAW_RES_ERROR = -2;
	public const int MAW_RES_INVALID_PROPERTY_NAME = -2;
	public const int MAW_RES_INVALID_PROPERTY_VALUE = -3;
	public const int MAW_RES_INVALID_HANDLE = -4;
	public const int MAW_RES_INVALID_TYPE_NAME = -5;
	public const int MAW_RES_INVALID_INDEX = -6;
	public const int MAW_RES_INVALID_STRING_BUFFER_SIZE = -7;
	public const int MAW_RES_INVALID_SCREEN = -8;
	public const int MAW_RES_INVALID_LAYOUT = -9;
	public const int MAW_RES_REMOVED_ROOT = -10;
	public const int MAW_RES_FEATURE_NOT_AVAILABLE = -11;
	public const String MAW_SCREEN = "Screen";
	public const String MAW_TAB_SCREEN = "TabScreen";
	public const String MAW_STACK_SCREEN = "StackScreen";
	public const String MAW_BUTTON = "Button";
	public const String MAW_IMAGE = "Image";
	public const String MAW_IMAGE_BUTTON = "ImageButton";
	public const String MAW_LABEL = "Label";
	public const String MAW_EDIT_BOX = "EditBox";
	public const String MAW_LIST_VIEW = "ListView";
	public const String MAW_LIST_VIEW_ITEM = "ListViewItem";
	public const String MAW_CHECK_BOX = "CheckBox";
	public const String MAW_HORIZONTAL_LAYOUT = "HorizontalLayout";
	public const String MAW_VERTICAL_LAYOUT = "VerticalLayout";
	public const String MAW_RELATIVE_LAYOUT = "RelativeLayout";
	public const String MAW_SEARCH_BAR = "SearchBar";
	public const String MAW_NAV_BAR = "NavBar";
	public const String MAW_GL_VIEW = "GLView";
	public const String MAW_GL2_VIEW = "GL2View";
	public const String MAW_CAMERA_PREVIEW = "CameraPreview";
	public const String MAW_WEB_VIEW = "WebView";
	public const String MAW_PROGRESS_BAR = "ProgressBar";
	public const String MAW_ACTIVITY_INDICATOR = "ActivityIndicator";
	public const String MAW_SLIDER = "Slider";
	public const String MAW_DATE_PICKER = "DatePicker";
	public const String MAW_TIME_PICKER = "TimePicker";
	public const String MAW_NUMBER_PICKER = "NumberPicker";
	public const String MAW_VIDEO_VIEW = "VideoView";
	public const String MAW_TOGGLE_BUTTON = "ToggleButton";
	public const String MAW_WIDGET_LEFT = "left";
	public const String MAW_WIDGET_TOP = "top";
	public const String MAW_WIDGET_WIDTH = "width";
	public const String MAW_WIDGET_HEIGHT = "height";
	public const String MAW_WIDGET_ALPHA = "alpha";
	public const String MAW_WIDGET_BACKGROUND_COLOR = "backgroundColor";
	public const String MAW_WIDGET_VISIBLE = "visible";
	public const String MAW_WIDGET_ENABLED = "enabled";
	public const String MAW_WIDGET_BACKGROUND_GRADIENT = "backgroundGradient";
	public const String MAW_SCREEN_TITLE = "title";
	public const String MAW_SCREEN_ICON = "icon";
	public const String MAW_TAB_SCREEN_TITLE = MAW_SCREEN_TITLE;
	public const String MAW_TAB_SCREEN_ICON = MAW_SCREEN_ICON;
	public const String MAW_TAB_SCREEN_CURRENT_TAB = "currentTab";
	public const String MAW_STACK_SCREEN_TITLE = MAW_SCREEN_TITLE;
	public const String MAW_STACK_SCREEN_ICON = MAW_SCREEN_ICON;
	public const String MAW_STACK_SCREEN_BACK_BUTTON_ENABLED = "backButtonEnabled";
	public const String MAW_LABEL_TEXT = "text";
	public const String MAW_LABEL_TEXT_VERTICAL_ALIGNMENT = "textVerticalAlignment";
	public const String MAW_LABEL_TEXT_HORIZONTAL_ALIGNMENT = "textHorizontalAlignment";
	public const String MAW_LABEL_FONT_COLOR = "fontColor";
	public const String MAW_LABEL_FONT_SIZE = "fontSize";
	public const String MAW_LABEL_FONT_HANDLE = "fontHandle";
	public const String MAW_LABEL_MAX_NUMBER_OF_LINES = "maxNumberOfLines";
	public const String MAW_BUTTON_TEXT = "text";
	public const String MAW_BUTTON_TEXT_VERTICAL_ALIGNMENT = "textVerticalAlignment";
	public const String MAW_BUTTON_TEXT_HORIZONTAL_ALIGNMENT = "textHorizontalAlignment";
	public const String MAW_BUTTON_FONT_COLOR = "fontColor";
	public const String MAW_BUTTON_FONT_SIZE = "fontSize";
	public const String MAW_BUTTON_FONT_HANDLE = "fontHandle";
	public const String MAW_IMAGE_BUTTON_TEXT = "text";
	public const String MAW_IMAGE_BUTTON_TEXT_VERTICAL_ALIGNMENT = "textVerticalAlignment";
	public const String MAW_IMAGE_BUTTON_TEXT_HORIZONTAL_ALIGNMENT = "textHorizontalAlignment";
	public const String MAW_IMAGE_BUTTON_FONT_COLOR = "fontColor";
	public const String MAW_IMAGE_BUTTON_FONT_SIZE = "fontSize";
	public const String MAW_IMAGE_BUTTON_BACKGROUND_IMAGE = "backgroundImage";
	public const String MAW_IMAGE_BUTTON_IMAGE = "image";
	public const String MAW_IMAGE_BUTTON_FONT_HANDLE = "fontHandle";
	public const String MAW_IMAGE_IMAGE = "image";
	public const String MAW_IMAGE_SCALE_MODE = "scaleMode";
	public const String MAW_EDIT_BOX_TEXT = "text";
	public const String MAW_EDIT_BOX_PLACEHOLDER = "placeholder";
	public const String MAW_EDIT_BOX_SHOW_KEYBOARD = "showKeyboard";
	public const String MAW_EDIT_BOX_EDIT_MODE = "editMode";
	public const String MAW_LIST_VIEW_ITEM_TEXT = "text";
	public const String MAW_LIST_VIEW_ITEM_ICON = "icon";
	public const String MAW_LIST_VIEW_ITEM_ACCESSORY_TYPE = "accessoryType";
	public const String MAW_LIST_VIEW_ITEM_FONT_HANDLE = "fontHandle";
	public const String MAW_CHECK_BOX_CHECKED = "checked";
	public const String MAW_TOGGLE_BUTTON_CHECKED = "checked";
	public const String MAW_HORIZONTAL_LAYOUT_CHILD_VERTICAL_ALIGNMENT = "childVerticalAlignment";
	public const String MAW_HORIZONTAL_LAYOUT_CHILD_HORIZONTAL_ALIGNMENT = "childHorizontalAlignment";
	public const String MAW_VERTICAL_LAYOUT_CHILD_VERTICAL_ALIGNMENT = "childVerticalAlignment";
	public const String MAW_VERTICAL_LAYOUT_CHILD_HORIZONTAL_ALIGNMENT = "childHorizontalAlignment";
	public const String MAW_SEARCH_BAR_TEXT = "text";
	public const String MAW_SEARCH_BAR_PLACEHOLDER = "placeholder";
	public const String MAW_SEARCH_BAR_SHOW_KEYBOARD = "showKeyboard";
	public const String MAW_GL_VIEW_INVALIDATE = "invalidate";
	public const String MAW_GL_VIEW_BIND = "bind";
	public const String MAW_WEB_VIEW_URL = "url";
	public const String MAW_WEB_VIEW_HTML = "html";
	public const String MAW_WEB_VIEW_BASE_URL = "baseUrl";
	public const String MAW_WEB_VIEW_SOFT_HOOK = "softHook";
	public const String MAW_WEB_VIEW_HARD_HOOK = "hardHook";
	public const String MAW_WEB_VIEW_NEW_URL = "newurl";
	public const String MAW_WEB_VIEW_HORIZONTAL_SCROLL_BAR_ENABLED = "horizontalScrollBarEnabled";
	public const String MAW_WEB_VIEW_VERTICAL_SCROLL_BAR_ENABLED = "verticalScrollBarEnabled";
	public const String MAW_WEB_VIEW_ENABLE_ZOOM = "enableZoom";
	public const String MAW_WEB_VIEW_NAVIGATE = "navigate";
	public const String MAW_PROGRESS_BAR_MAX = "max";
	public const String MAW_PROGRESS_BAR_PROGRESS = "progress";
	public const String MAW_PROGRESS_BAR_INCREMENT_PROGRESS = "incrementProgress";
	public const String MAW_ACTIVITY_INDICATOR_IN_PROGRESS = "inProgress";
	public const String MAW_SLIDER_MAX = "max";
	public const String MAW_SLIDER_VALUE = "value";
	public const String MAW_SLIDER_INCREASE_VALUE = "increaseValue";
	public const String MAW_SLIDER_DECREASE_VALUE = "decreaseValue";
	public const String MAW_DATE_PICKER_MAX_DATE = "maxDate";
	public const String MAW_DATE_PICKER_MIN_DATE = "minDate";
	public const String MAW_DATE_PICKER_YEAR = "year";
	public const String MAW_DATE_PICKER_MONTH = "month";
	public const String MAW_DATE_PICKER_DAY_OF_MONTH = "dayOfMonth";
	public const String MAW_TIME_PICKER_CURRENT_HOUR = "currentHour";
	public const String MAW_TIME_PICKER_CURRENT_MINUTE = "currentMinute";
	public const String MAW_NUMBER_PICKER_VALUE = "value";
	public const String MAW_NUMBER_PICKER_MIN_VALUE = "minValue";
	public const String MAW_NUMBER_PICKER_MAX_VALUE = "maxValue";
	public const String MAW_VIDEO_VIEW_PATH = "path";
	public const String MAW_VIDEO_VIEW_URL = "url";
	public const String MAW_VIDEO_VIEW_ACTION = "action";
	public const String MAW_VIDEO_VIEW_SEEK_TO = "seekTo";
	public const String MAW_VIDEO_VIEW_DURATION = "duration";
	public const String MAW_VIDEO_VIEW_BUFFER_PERCENTAGE = "bufferPercentage";
	public const String MAW_VIDEO_VIEW_CURRENT_POSITION = "currentPosition";
	public const String MAW_NAV_BAR_TITLE = "title";
	public const String MAW_NAV_BAR_BACK_BTN = "backBtn";
	public const String MAW_NAV_BAR_COLOR = "color";
	public const int MA_CAMERA_CONST_BACK_CAMERA = 0;
	public const int MA_CAMERA_CONST_FRONT_CAMERA = 1;
	public const int MA_CAMERA_RES_OK = 1;
	public const int MA_CAMERA_RES_FAILED = -2;
	public const int MA_CAMERA_RES_NOT_STARTED = -3;
	public const int MA_CAMERA_RES_PROPERTY_NOTSUPPORTED = -4;
	public const int MA_CAMERA_RES_INVALID_PROPERTY_VALUE = -5;
	public const int MA_CAMERA_RES_VALUE_NOTSUPPORTED = -6;
	public const String MA_CAMERA_FLASH_ON = "on";
	public const String MA_CAMERA_FLASH_AUTO = "auto";
	public const String MA_CAMERA_FLASH_OFF = "off";
	public const String MA_CAMERA_FLASH_TORCH = "torch";
	public const String MA_CAMERA_FOCUS_AUTO = "auto";
	public const String MA_CAMERA_FOCUS_INFINITY = "infinity";
	public const String MA_CAMERA_FOCUS_MACRO = "macro";
	public const String MA_CAMERA_FOCUS_FIXED = "fixed";
	public const String MA_CAMERA_IMAGE_JPEG = "jpeg";
	public const String MA_CAMERA_IMAGE_RAW = "raw";
	public const String MA_CAMERA_FLASH_MODE = "flash-mode";
	public const String MA_CAMERA_FOCUS_MODE = "focus-mode";
	public const String MA_CAMERA_IMAGE_FORMAT = "image-format";
	public const String MA_CAMERA_ZOOM = "zoom";
	public const String MA_CAMERA_MAX_ZOOM = "max-zoom";
	public const String MA_CAMERA_ZOOM_SUPPORTED = "zoom-supported";
	public const String MA_CAMERA_FLASH_SUPPORTED = "flash-supported";
	public const int MA_TB_TYPE_ANY = 0;
	public const int MA_TB_TYPE_EMAILADDR = 1;
	public const int MA_TB_TYPE_NUMERIC = 2;
	public const int MA_TB_TYPE_PHONENUMBER = 3;
	public const int MA_TB_TYPE_URL = 4;
	public const int MA_TB_TYPE_DECIMAL = 5;
	public const int MA_TB_RES_OK = 1;
	public const int MA_TB_RES_CANCEL = 2;
	public const int MA_TB_FLAG_PASSWORD = 0x1000;
	public const int MA_TB_FLAG_UNEDITABLE = 0x2000;
	public const int MA_TB_FLAG_SENSITIVE = 0x4000;
	public const int MA_TB_FLAG_NON_PREDICTIVE = 0x8000;
	public const int MA_TB_FLAG_INITIAL_CAPS_WORD = 0x10000;
	public const int MA_TB_FLAG_INITIAL_CAPS_SENTENCE = 0x20000;
	public const int NOTIFICATION_TYPE_APPLICATION_LAUNCHER = 1;
	public const int SCREEN_ORIENTATION_LANDSCAPE = 1;
	public const int SCREEN_ORIENTATION_PORTRAIT = 2;
	public const int SCREEN_ORIENTATION_DYNAMIC = 3;
	public const int MA_GL_TEX_IMAGE_2D_OK = 0;
	public const int MA_GL_TEX_IMAGE_2D_INVALID_IMAGE = -2;
	public const int MA_GL_API_GL2 = 0;
	public const int MA_GL_API_GL1 = 1;
	public const int MA_GL_INIT_RES_OK = 0;
	public const int MA_GL_INIT_RES_UNAVAILABLE_API = -2;
	public const int MA_GL_INIT_RES_ERROR = -3;
	public const int SENSOR_TYPE_ACCELEROMETER = 1;
	public const int SENSOR_TYPE_MAGNETIC_FIELD = 2;
	public const int SENSOR_TYPE_ORIENTATION = 3;
	public const int SENSOR_TYPE_GYROSCOPE = 4;
	public const int SENSOR_TYPE_PROXIMITY = 5;
	public const int SENSOR_RATE_FASTEST = 0;
	public const int SENSOR_RATE_GAME = -1;
	public const int SENSOR_RATE_NORMAL = -2;
	public const int SENSOR_RATE_UI = -3;
	public const int SENSOR_ERROR_NONE = 0;
	public const int SENSOR_ERROR_NOT_AVAILABLE = -1;
	public const int SENSOR_ERROR_INTERVAL_NOT_SET = -2;
	public const int SENSOR_ERROR_ALREADY_ENABLED = -3;
	public const int SENSOR_ERROR_NOT_ENABLED = -4;
	public const int SENSOR_ERROR_CANNOT_DISABLE = -5;
	public const int UIDEVICE_ORIENTATION_UNKNOWN = 0;
	public const int UIDEVICE_ORIENTATION_PORTRAIT = 1;
	public const int UIDEVICE_ORIENTATION_PORTRAIT_UPSIDE_DOWN = 2;
	public const int UIDEVICE_ORIENTATION_LANDSCAPE_LEFT = 3;
	public const int UIDEVICE_ORIENTATION_LANDSCAPE_RIGHT = 4;
	public const int UIDEVICE_ORIENTATION_FACE_UP = 5;
	public const int UIDEVICE_ORIENTATION_FACE_DOWN = 6;
	public const int SENSOR_PROXIMITY_VALUE_FAR = 0;
	public const int SENSOR_PROXIMITY_VALUE_NEAR = 1;
	public const int IOCTL_UNAVAILABLE = -1;
}

public class Syscalls {
	public delegate int Delegate_maCheckInterfaceVersion(int _hash);
	public Delegate_maCheckInterfaceVersion maCheckInterfaceVersion = null;
	public delegate void Delegate_maExit(int _result);
	public Delegate_maExit maExit = null;
	public delegate void Delegate_maPanic(int _result, int _message);
	public Delegate_maPanic maPanic = null;
	public delegate int Delegate_memset(int _dst, int _val, int _size);
	public Delegate_memset memset = null;
	public delegate int Delegate_memcpy(int _dst, int _src, int _size);
	public Delegate_memcpy memcpy = null;
	public delegate int Delegate_strcmp(int _str1, int _str2);
	public Delegate_strcmp strcmp = null;
	public delegate int Delegate_strcpy(int _dst, int _src);
	public Delegate_strcpy strcpy = null;
	public delegate double Delegate___adddf3(double _a, double _b);
	public Delegate___adddf3 __adddf3 = null;
	public delegate double Delegate___subdf3(double _a, double _b);
	public Delegate___subdf3 __subdf3 = null;
	public delegate double Delegate___muldf3(double _a, double _b);
	public Delegate___muldf3 __muldf3 = null;
	public delegate double Delegate___divdf3(double _a, double _b);
	public Delegate___divdf3 __divdf3 = null;
	public delegate double Delegate___negdf2(double _a);
	public Delegate___negdf2 __negdf2 = null;
	public delegate int Delegate___fixdfsi(double _a);
	public Delegate___fixdfsi __fixdfsi = null;
	public delegate int Delegate___fixunsdfsi(double _a);
	public Delegate___fixunsdfsi __fixunsdfsi = null;
	public delegate double Delegate___floatsidf(int _a);
	public Delegate___floatsidf __floatsidf = null;
	public delegate double Delegate___extendsfdf2(float _a);
	public Delegate___extendsfdf2 __extendsfdf2 = null;
	public delegate int Delegate_dcmp(double _a, double _b);
	public Delegate_dcmp dcmp = null;
	public delegate float Delegate___addsf3(float _a, float _b);
	public Delegate___addsf3 __addsf3 = null;
	public delegate float Delegate___subsf3(float _a, float _b);
	public Delegate___subsf3 __subsf3 = null;
	public delegate float Delegate___mulsf3(float _a, float _b);
	public Delegate___mulsf3 __mulsf3 = null;
	public delegate float Delegate___divsf3(float _a, float _b);
	public Delegate___divsf3 __divsf3 = null;
	public delegate float Delegate___negsf2(float _a);
	public Delegate___negsf2 __negsf2 = null;
	public delegate int Delegate___fixsfsi(float _a);
	public Delegate___fixsfsi __fixsfsi = null;
	public delegate int Delegate___fixunssfsi(float _a);
	public Delegate___fixunssfsi __fixunssfsi = null;
	public delegate float Delegate___floatsisf(int _a);
	public Delegate___floatsisf __floatsisf = null;
	public delegate float Delegate___truncdfsf2(double _a);
	public Delegate___truncdfsf2 __truncdfsf2 = null;
	public delegate int Delegate_fcmp(float _a, float _b);
	public Delegate_fcmp fcmp = null;
	public delegate double Delegate_sin(double _x);
	public Delegate_sin sin = null;
	public delegate double Delegate_cos(double _x);
	public Delegate_cos cos = null;
	public delegate double Delegate_tan(double _x);
	public Delegate_tan tan = null;
	public delegate double Delegate_sqrt(double _x);
	public Delegate_sqrt sqrt = null;
	public delegate int Delegate_maSetColor(int _rgb);
	public Delegate_maSetColor maSetColor = null;
	public delegate void Delegate_maSetClipRect(int _left, int _top, int _width, int _height);
	public Delegate_maSetClipRect maSetClipRect = null;
	public delegate void Delegate_maGetClipRect(int _out);
	public Delegate_maGetClipRect maGetClipRect = null;
	public delegate void Delegate_maPlot(int _posX, int _posY);
	public Delegate_maPlot maPlot = null;
	public delegate void Delegate_maLine(int _startX, int _startY, int _endX, int _endY);
	public Delegate_maLine maLine = null;
	public delegate void Delegate_maFillRect(int _left, int _top, int _width, int _height);
	public Delegate_maFillRect maFillRect = null;
	public delegate void Delegate_maFillTriangleStrip(int _points, int _count);
	public Delegate_maFillTriangleStrip maFillTriangleStrip = null;
	public delegate void Delegate_maFillTriangleFan(int _points, int _count);
	public Delegate_maFillTriangleFan maFillTriangleFan = null;
	public delegate int Delegate_maGetTextSize(int _str);
	public Delegate_maGetTextSize maGetTextSize = null;
	public delegate int Delegate_maGetTextSizeW(int _str);
	public Delegate_maGetTextSizeW maGetTextSizeW = null;
	public delegate void Delegate_maDrawText(int _left, int _top, int _str);
	public Delegate_maDrawText maDrawText = null;
	public delegate void Delegate_maDrawTextW(int _left, int _top, int _str);
	public Delegate_maDrawTextW maDrawTextW = null;
	public delegate void Delegate_maUpdateScreen();
	public Delegate_maUpdateScreen maUpdateScreen = null;
	public delegate void Delegate_maResetBacklight();
	public Delegate_maResetBacklight maResetBacklight = null;
	public delegate int Delegate_maGetScrSize();
	public Delegate_maGetScrSize maGetScrSize = null;
	public delegate void Delegate_maDrawImage(int _image, int _left, int _top);
	public Delegate_maDrawImage maDrawImage = null;
	public delegate void Delegate_maDrawRGB(int _dstPoint, int _src, int _srcRect, int _scanlength);
	public Delegate_maDrawRGB maDrawRGB = null;
	public delegate void Delegate_maDrawImageRegion(int _image, int _srcRect, int _dstPoint, int _transformMode);
	public Delegate_maDrawImageRegion maDrawImageRegion = null;
	public delegate int Delegate_maGetImageSize(int _image);
	public Delegate_maGetImageSize maGetImageSize = null;
	public delegate void Delegate_maGetImageData(int _image, int _dst, int _srcRect, int _scanlength);
	public Delegate_maGetImageData maGetImageData = null;
	public delegate int Delegate_maSetDrawTarget(int _image);
	public Delegate_maSetDrawTarget maSetDrawTarget = null;
	public delegate int Delegate_maFindLabel(int _name);
	public Delegate_maFindLabel maFindLabel = null;
	public delegate int Delegate_maCreateImageFromData(int _placeholder, int _data, int _offset, int _size);
	public Delegate_maCreateImageFromData maCreateImageFromData = null;
	public delegate int Delegate_maCreateImageRaw(int _placeholder, int _src, int _size, int _alpha);
	public Delegate_maCreateImageRaw maCreateImageRaw = null;
	public delegate int Delegate_maCreateDrawableImage(int _placeholder, int _width, int _height);
	public Delegate_maCreateDrawableImage maCreateDrawableImage = null;
	public delegate int Delegate_maCreateData(int _placeholder, int _size);
	public Delegate_maCreateData maCreateData = null;
	public delegate int Delegate_maCreatePlaceholder();
	public Delegate_maCreatePlaceholder maCreatePlaceholder = null;
	public delegate void Delegate_maDestroyObject(int _handle);
	public Delegate_maDestroyObject maDestroyObject = null;
	public delegate int Delegate_maGetDataSize(int _data);
	public Delegate_maGetDataSize maGetDataSize = null;
	public delegate void Delegate_maReadData(int _data, int _dst, int _offset, int _size);
	public Delegate_maReadData maReadData = null;
	public delegate void Delegate_maWriteData(int _data, int _src, int _offset, int _size);
	public Delegate_maWriteData maWriteData = null;
	public delegate void Delegate_maCopyData(int _params);
	public Delegate_maCopyData maCopyData = null;
	public delegate int Delegate_maOpenStore(int _name, int _flags);
	public Delegate_maOpenStore maOpenStore = null;
	public delegate int Delegate_maWriteStore(int _store, int _data);
	public Delegate_maWriteStore maWriteStore = null;
	public delegate int Delegate_maReadStore(int _store, int _placeholder);
	public Delegate_maReadStore maReadStore = null;
	public delegate void Delegate_maCloseStore(int _store, int __delete);
	public Delegate_maCloseStore maCloseStore = null;
	public delegate int Delegate_maConnect(int _url);
	public Delegate_maConnect maConnect = null;
	public delegate void Delegate_maConnClose(int _conn);
	public Delegate_maConnClose maConnClose = null;
	public delegate void Delegate_maConnRead(int _conn, int _dst, int _size);
	public Delegate_maConnRead maConnRead = null;
	public delegate void Delegate_maConnWrite(int _conn, int _src, int _size);
	public Delegate_maConnWrite maConnWrite = null;
	public delegate void Delegate_maConnReadToData(int _conn, int _data, int _offset, int _size);
	public Delegate_maConnReadToData maConnReadToData = null;
	public delegate void Delegate_maConnWriteFromData(int _conn, int _data, int _offset, int _size);
	public Delegate_maConnWriteFromData maConnWriteFromData = null;
	public delegate int Delegate_maConnGetAddr(int _conn, int _addr);
	public Delegate_maConnGetAddr maConnGetAddr = null;
	public delegate int Delegate_maHttpCreate(int _url, int _method);
	public Delegate_maHttpCreate maHttpCreate = null;
	public delegate void Delegate_maHttpSetRequestHeader(int _conn, int _key, int _value);
	public Delegate_maHttpSetRequestHeader maHttpSetRequestHeader = null;
	public delegate int Delegate_maHttpGetResponseHeader(int _conn, int _key, int _buffer, int _bufSize);
	public Delegate_maHttpGetResponseHeader maHttpGetResponseHeader = null;
	public delegate void Delegate_maHttpFinish(int _conn);
	public Delegate_maHttpFinish maHttpFinish = null;
	public delegate int Delegate_maLoadResources(int _data);
	public Delegate_maLoadResources maLoadResources = null;
	public delegate void Delegate_maLoadProgram(int _data, int _reload);
	public Delegate_maLoadProgram maLoadProgram = null;
	public delegate int Delegate_maGetKeys();
	public Delegate_maGetKeys maGetKeys = null;
	public delegate int Delegate_maGetEvent(int _event);
	public Delegate_maGetEvent maGetEvent = null;
	public delegate void Delegate_maWait(int _timeout);
	public Delegate_maWait maWait = null;
	public delegate int Delegate_maTime();
	public Delegate_maTime maTime = null;
	public delegate int Delegate_maLocalTime();
	public Delegate_maLocalTime maLocalTime = null;
	public delegate int Delegate_maGetMilliSecondCount();
	public Delegate_maGetMilliSecondCount maGetMilliSecondCount = null;
	public delegate int Delegate_maFreeObjectMemory();
	public Delegate_maFreeObjectMemory maFreeObjectMemory = null;
	public delegate int Delegate_maTotalObjectMemory();
	public Delegate_maTotalObjectMemory maTotalObjectMemory = null;
	public delegate int Delegate_maVibrate(int _ms);
	public Delegate_maVibrate maVibrate = null;
	public delegate int Delegate_maSoundPlay(int _sound_res, int _offset, int _size);
	public Delegate_maSoundPlay maSoundPlay = null;
	public delegate void Delegate_maSoundStop();
	public Delegate_maSoundStop maSoundStop = null;
	public delegate int Delegate_maSoundIsPlaying();
	public Delegate_maSoundIsPlaying maSoundIsPlaying = null;
	public delegate int Delegate_maSoundGetVolume();
	public Delegate_maSoundGetVolume maSoundGetVolume = null;
	public delegate void Delegate_maSoundSetVolume(int _vol);
	public Delegate_maSoundSetVolume maSoundSetVolume = null;
	public delegate long Delegate_maInvokeExtension(int _function, int _a, int _b, int _c);
	public Delegate_maInvokeExtension maInvokeExtension = null;
	public delegate long Delegate_maIOCtl(int _function, int _a, int _b, int _c);
	public Delegate_maIOCtl maIOCtl = null;
}

public class SyscallInvoker {

	private CoreInterpreted mCore;
	private Syscalls mSyscalls;

	public SyscallInvoker(CoreInterpreted core, Syscalls syscalls) {
		mCore = core;
		mSyscalls = syscalls;
	}

	public void InvokeSyscall(int id) {
		switch(id) {
			case 1:
			mCore.SetReturnValue(mSyscalls.maCheckInterfaceVersion(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 2:
			mSyscalls.maExit(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 3:
			mSyscalls.maPanic(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1));
			break;
			case 4:
			mCore.SetReturnValue(mSyscalls.memset(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2)));
			break;
			case 5:
			mCore.SetReturnValue(mSyscalls.memcpy(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2)));
			break;
			case 6:
			mCore.SetReturnValue(mSyscalls.strcmp(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 7:
			mCore.SetReturnValue(mSyscalls.strcpy(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 8:
			mCore.SetReturnValue(mSyscalls.__adddf3(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)), MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3))));
			break;
			case 9:
			mCore.SetReturnValue(mSyscalls.__subdf3(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)), MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3))));
			break;
			case 10:
			mCore.SetReturnValue(mSyscalls.__muldf3(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)), MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3))));
			break;
			case 11:
			mCore.SetReturnValue(mSyscalls.__divdf3(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)), MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3))));
			break;
			case 12:
			mCore.SetReturnValue(mSyscalls.__negdf2(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 13:
			mCore.SetReturnValue(mSyscalls.__fixdfsi(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 14:
			mCore.SetReturnValue(mSyscalls.__fixunsdfsi(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 15:
			mCore.SetReturnValue(mSyscalls.__floatsidf(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 16:
			mCore.SetReturnValue(mSyscalls.__extendsfdf2(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0))));
			break;
			case 17:
			mCore.SetReturnValue(mSyscalls.dcmp(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)), MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3))));
			break;
			case 18:
			mCore.SetReturnValue(mSyscalls.__addsf3(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)), MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 19:
			mCore.SetReturnValue(mSyscalls.__subsf3(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)), MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 20:
			mCore.SetReturnValue(mSyscalls.__mulsf3(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)), MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 21:
			mCore.SetReturnValue(mSyscalls.__divsf3(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)), MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 22:
			mCore.SetReturnValue(mSyscalls.__negsf2(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0))));
			break;
			case 23:
			mCore.SetReturnValue(mSyscalls.__fixsfsi(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0))));
			break;
			case 24:
			mCore.SetReturnValue(mSyscalls.__fixunssfsi(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0))));
			break;
			case 25:
			mCore.SetReturnValue(mSyscalls.__floatsisf(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 26:
			mCore.SetReturnValue(mSyscalls.__truncdfsf2(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 27:
			mCore.SetReturnValue(mSyscalls.fcmp(MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)), MoSync.Util.ConvertToFloat(mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 28:
			mCore.SetReturnValue(mSyscalls.sin(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 29:
			mCore.SetReturnValue(mSyscalls.cos(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 30:
			mCore.SetReturnValue(mSyscalls.tan(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 31:
			mCore.SetReturnValue(mSyscalls.sqrt(MoSync.Util.ConvertToDouble(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1))));
			break;
			case 32:
			mCore.SetReturnValue(mSyscalls.maSetColor(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 33:
			mSyscalls.maSetClipRect(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 34:
			mSyscalls.maGetClipRect(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 35:
			mSyscalls.maPlot(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1));
			break;
			case 36:
			mSyscalls.maLine(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 37:
			mSyscalls.maFillRect(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 38:
			mSyscalls.maFillTriangleStrip(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1));
			break;
			case 39:
			mSyscalls.maFillTriangleFan(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1));
			break;
			case 40:
			mCore.SetReturnValue(mSyscalls.maGetTextSize(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 41:
			mCore.SetReturnValue(mSyscalls.maGetTextSizeW(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 42:
			mSyscalls.maDrawText(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2));
			break;
			case 43:
			mSyscalls.maDrawTextW(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2));
			break;
			case 44:
			mSyscalls.maUpdateScreen();
			break;
			case 45:
			mSyscalls.maResetBacklight();
			break;
			case 46:
			mCore.SetReturnValue(mSyscalls.maGetScrSize());
			break;
			case 47:
			mSyscalls.maDrawImage(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2));
			break;
			case 48:
			mSyscalls.maDrawRGB(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 49:
			mSyscalls.maDrawImageRegion(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 50:
			mCore.SetReturnValue(mSyscalls.maGetImageSize(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 51:
			mSyscalls.maGetImageData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 52:
			mCore.SetReturnValue(mSyscalls.maSetDrawTarget(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 53:
			mCore.SetReturnValue(mSyscalls.maFindLabel(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 54:
			mCore.SetReturnValue(mSyscalls.maCreateImageFromData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3)));
			break;
			case 55:
			mCore.SetReturnValue(mSyscalls.maCreateImageRaw(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3)));
			break;
			case 56:
			mCore.SetReturnValue(mSyscalls.maCreateDrawableImage(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2)));
			break;
			case 57:
			mCore.SetReturnValue(mSyscalls.maCreateData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 58:
			mCore.SetReturnValue(mSyscalls.maCreatePlaceholder());
			break;
			case 59:
			mSyscalls.maDestroyObject(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 60:
			mCore.SetReturnValue(mSyscalls.maGetDataSize(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 61:
			mSyscalls.maReadData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 62:
			mSyscalls.maWriteData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 63:
			mSyscalls.maCopyData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 64:
			mCore.SetReturnValue(mSyscalls.maOpenStore(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 65:
			mCore.SetReturnValue(mSyscalls.maWriteStore(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 66:
			mCore.SetReturnValue(mSyscalls.maReadStore(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 67:
			mSyscalls.maCloseStore(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1));
			break;
			case 68:
			mCore.SetReturnValue(mSyscalls.maConnect(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 69:
			mSyscalls.maConnClose(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 70:
			mSyscalls.maConnRead(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2));
			break;
			case 71:
			mSyscalls.maConnWrite(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2));
			break;
			case 72:
			mSyscalls.maConnReadToData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 73:
			mSyscalls.maConnWriteFromData(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3));
			break;
			case 74:
			mCore.SetReturnValue(mSyscalls.maConnGetAddr(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 75:
			mCore.SetReturnValue(mSyscalls.maHttpCreate(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1)));
			break;
			case 76:
			mSyscalls.maHttpSetRequestHeader(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2));
			break;
			case 77:
			mCore.SetReturnValue(mSyscalls.maHttpGetResponseHeader(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3)));
			break;
			case 78:
			mSyscalls.maHttpFinish(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 79:
			mCore.SetReturnValue(mSyscalls.maLoadResources(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 80:
			mSyscalls.maLoadProgram(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1));
			break;
			case 81:
			mCore.SetReturnValue(mSyscalls.maGetKeys());
			break;
			case 82:
			mCore.SetReturnValue(mSyscalls.maGetEvent(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 83:
			mSyscalls.maWait(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 84:
			mCore.SetReturnValue(mSyscalls.maTime());
			break;
			case 85:
			mCore.SetReturnValue(mSyscalls.maLocalTime());
			break;
			case 86:
			mCore.SetReturnValue(mSyscalls.maGetMilliSecondCount());
			break;
			case 87:
			mCore.SetReturnValue(mSyscalls.maFreeObjectMemory());
			break;
			case 88:
			mCore.SetReturnValue(mSyscalls.maTotalObjectMemory());
			break;
			case 89:
			mCore.SetReturnValue(mSyscalls.maVibrate(mCore.GetRegisterValue(CoreInterpreted.Reg.I0)));
			break;
			case 90:
			mCore.SetReturnValue(mSyscalls.maSoundPlay(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2)));
			break;
			case 91:
			mSyscalls.maSoundStop();
			break;
			case 92:
			mCore.SetReturnValue(mSyscalls.maSoundIsPlaying());
			break;
			case 93:
			mCore.SetReturnValue(mSyscalls.maSoundGetVolume());
			break;
			case 94:
			mSyscalls.maSoundSetVolume(mCore.GetRegisterValue(CoreInterpreted.Reg.I0));
			break;
			case 95:
			mCore.SetReturnValue(mSyscalls.maInvokeExtension(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3)));
			break;
			case 96:
			mCore.SetReturnValue(mSyscalls.maIOCtl(mCore.GetRegisterValue(CoreInterpreted.Reg.I0), mCore.GetRegisterValue(CoreInterpreted.Reg.I1), mCore.GetRegisterValue(CoreInterpreted.Reg.I2), mCore.GetRegisterValue(CoreInterpreted.Reg.I3)));
			break;
		}
	}
}

} // namespace MoSync
